package Lesson6;

//В классе Транспорт есть поля:
//        - Мощность(в лошадиных силах)
//        - Максимальная скорость(км/ч)
//        - Масса (кг)
//        - Марка( например: Audi, BMW , Boing, Airbus, Scania , МАЗ и т.д. )
//        В классе Наземный добавляются поля:
//        -Количество колёс
//        - Расход топлива(л/100км)
//        В классе Легковой добавляются поля:
//        - Тип кузова
//        - Кол-во пассажиров
//        В классе Грузовой добавляется поле:
//        - Грузоподъёмность(т)
//        В классе Воздушный добавляются поля:
//        - Размах крыльев (м)
//        - Минимальная длина взлётно-посадочной полосы для взлёта
//        В классе Гражданский добавляются поля:
//        - Кол-во пассажиров
//        - Наличие бизнес класса (true/false)
//        В классе Военный добавляются поля:
//        - Наличие системы катапультирования (true/false)
//        - Кол-во ракет на борту
//        В конечных классах (Легковой, Грузовой, Военный, Гражданский)
//        разработать метод описание который будет возвращать составленную строку
//        с описанием всех характеристик объекта.
//        В строку включить ещё один параметр мощность в киловаттах (кВ) . Расчёт
//        мощности в киловаттах производится в отдельном методе: 1 л.с = 0.74 кВ
//        Для легкового разработать метод который будет принимать время и считать
//        сколько километров проедет машина двигаясь с максимальной скоростью и
//        сколько топлива она израсходует за это время, результат вывести в консоль,
//        расчёт израсходуемого топлива вынести в отдельный метод private.
//        Результат работы метода должен вывести такую строчку: За время (ваше
//        введённое время) ч, автомобиль (марка автомобиля) двигаясь с максимальной
//        скоростью (ваша максимальная скорость) км/ч проедет (xxx) км и израсходует (xxx)
//        литров топлива.
//        Пример: За время 2.5 ч, автомобиль Audi двигаясь с максимальной скоростью
//        230 км/ч проедет 575 км и израсходует 46 литров топлива.
//        Для грузового разработать метод который проверит можно ли загрузить в
//        него xxx груза Метод должен проверять если это кол-во груза помещается в грузовик то
//        выводит в консоль ”Грузовик загружен”, если кол-во груза которое нужно загрузить
//        больше чем то которое может влезть в наш грузовик то выводим “Вам нужен грузовик
//        побольше ”.
//        Такой же метод делаем для Гражданских самолётов, только проверяем
//        вместимость пассажиров.
//        Для Военных самолётов делаем метод выстрел, проверяем если кол-во ракет
//        не равно 0 то выводим на консоль “ Ракета пошла...”, если 0 то “Боеприпасы
//        отсутствуют”.
//        А так же метод катапультирование, который проверит если наличие системы
//        катапультирования true, то выводим “Катапультирование прошло успешно”, если false,
//        то “У вас нет такой системы ”
public class Program {



    public static void main(String[] args) {


        LightTransport audi = new LightTransport(
                220,
                300,
                1200,
                "AUDI",
                4,
                10,
                "Coupe",
                2);



        MilitaryAirTransport apach = new MilitaryAirTransport(
                1500,
                500,
                3000,
                "Apach",
                20,
                1,
                false,
                10);




        FreightTransport mack = new FreightTransport(
                800,
                89,
                4,
                "MACk truck",
                8,
                25,
                25);



        CitizensAirTransport boeng = new CitizensAirTransport(
                4000,
                1000,
                12,
                "boeng747",
                35,
                500,
                100,
                true);

        audi.information();
        mack.information();

        boeng.information();
        apach.information();

        mack.loadCapacityCheck();
        boeng.passengerCapacity();
        apach.shot();
        apach.ejection();


        audi.drivingPerformance(2);

    }


}